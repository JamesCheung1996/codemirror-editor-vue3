{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/codemirror@5.65.12/node_modules/codemirror/addon/merge/merge.js"],
  "sourcesContent": ["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/5/LICENSE\n\n// declare global: diff_match_patch, DIFF_INSERT, DIFF_DELETE, DIFF_EQUAL\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\")); // Note non-packaged dependency diff_match_patch\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"diff_match_patch\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var Pos = CodeMirror.Pos;\n  var svgNS = \"http://www.w3.org/2000/svg\";\n\n  function DiffView(mv, type) {\n    this.mv = mv;\n    this.type = type;\n    this.classes = type == \"left\"\n      ? {chunk: \"CodeMirror-merge-l-chunk\",\n         start: \"CodeMirror-merge-l-chunk-start\",\n         end: \"CodeMirror-merge-l-chunk-end\",\n         insert: \"CodeMirror-merge-l-inserted\",\n         del: \"CodeMirror-merge-l-deleted\",\n         connect: \"CodeMirror-merge-l-connect\"}\n      : {chunk: \"CodeMirror-merge-r-chunk\",\n         start: \"CodeMirror-merge-r-chunk-start\",\n         end: \"CodeMirror-merge-r-chunk-end\",\n         insert: \"CodeMirror-merge-r-inserted\",\n         del: \"CodeMirror-merge-r-deleted\",\n         connect: \"CodeMirror-merge-r-connect\"};\n  }\n\n  DiffView.prototype = {\n    constructor: DiffView,\n    init: function(pane, orig, options) {\n      this.edit = this.mv.edit;\n      ;(this.edit.state.diffViews || (this.edit.state.diffViews = [])).push(this);\n      this.orig = CodeMirror(pane, copyObj({value: orig, readOnly: !this.mv.options.allowEditingOriginals}, copyObj(options)));\n      if (this.mv.options.connect == \"align\") {\n        if (!this.edit.state.trackAlignable) this.edit.state.trackAlignable = new TrackAlignable(this.edit)\n        this.orig.state.trackAlignable = new TrackAlignable(this.orig)\n      }\n      this.lockButton.title = this.edit.phrase(\"Toggle locked scrolling\");\n      this.lockButton.setAttribute(\"aria-label\", this.lockButton.title);\n\n      this.orig.state.diffViews = [this];\n      var classLocation = options.chunkClassLocation || \"background\";\n      if (Object.prototype.toString.call(classLocation) != \"[object Array]\") classLocation = [classLocation]\n      this.classes.classLocation = classLocation\n\n      this.diff = getDiff(asString(orig), asString(options.value), this.mv.options.ignoreWhitespace);\n      this.chunks = getChunks(this.diff);\n      this.diffOutOfDate = this.dealigned = false;\n      this.needsScrollSync = null\n\n      this.showDifferences = options.showDifferences !== false;\n    },\n    registerEvents: function(otherDv) {\n      this.forceUpdate = registerUpdate(this);\n      setScrollLock(this, true, false);\n      registerScroll(this, otherDv);\n    },\n    setShowDifferences: function(val) {\n      val = val !== false;\n      if (val != this.showDifferences) {\n        this.showDifferences = val;\n        this.forceUpdate(\"full\");\n      }\n    }\n  };\n\n  function ensureDiff(dv) {\n    if (dv.diffOutOfDate) {\n      dv.diff = getDiff(dv.orig.getValue(), dv.edit.getValue(), dv.mv.options.ignoreWhitespace);\n      dv.chunks = getChunks(dv.diff);\n      dv.diffOutOfDate = false;\n      CodeMirror.signal(dv.edit, \"updateDiff\", dv.diff);\n    }\n  }\n\n  var updating = false;\n  function registerUpdate(dv) {\n    var edit = {from: 0, to: 0, marked: []};\n    var orig = {from: 0, to: 0, marked: []};\n    var debounceChange, updatingFast = false;\n    function update(mode) {\n      updating = true;\n      updatingFast = false;\n      if (mode == \"full\") {\n        if (dv.svg) clear(dv.svg);\n        if (dv.copyButtons) clear(dv.copyButtons);\n        clearMarks(dv.edit, edit.marked, dv.classes);\n        clearMarks(dv.orig, orig.marked, dv.classes);\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n      ensureDiff(dv);\n      if (dv.showDifferences) {\n        updateMarks(dv.edit, dv.diff, edit, DIFF_INSERT, dv.classes);\n        updateMarks(dv.orig, dv.diff, orig, DIFF_DELETE, dv.classes);\n      }\n\n      if (dv.mv.options.connect == \"align\")\n        alignChunks(dv);\n      makeConnections(dv);\n      if (dv.needsScrollSync != null) syncScroll(dv, dv.needsScrollSync)\n\n      updating = false;\n    }\n    function setDealign(fast) {\n      if (updating) return;\n      dv.dealigned = true;\n      set(fast);\n    }\n    function set(fast) {\n      if (updating || updatingFast) return;\n      clearTimeout(debounceChange);\n      if (fast === true) updatingFast = true;\n      debounceChange = setTimeout(update, fast === true ? 20 : 250);\n    }\n    function change(_cm, change) {\n      if (!dv.diffOutOfDate) {\n        dv.diffOutOfDate = true;\n        edit.from = edit.to = orig.from = orig.to = 0;\n      }\n      // Update faster when a line was added/removed\n      setDealign(change.text.length - 1 != change.to.line - change.from.line);\n    }\n    function swapDoc() {\n      dv.diffOutOfDate = true;\n      dv.dealigned = true;\n      update(\"full\");\n    }\n    dv.edit.on(\"change\", change);\n    dv.orig.on(\"change\", change);\n    dv.edit.on(\"swapDoc\", swapDoc);\n    dv.orig.on(\"swapDoc\", swapDoc);\n    if (dv.mv.options.connect == \"align\") {\n      CodeMirror.on(dv.edit.state.trackAlignable, \"realign\", setDealign)\n      CodeMirror.on(dv.orig.state.trackAlignable, \"realign\", setDealign)\n    }\n    dv.edit.on(\"viewportChange\", function() { set(false); });\n    dv.orig.on(\"viewportChange\", function() { set(false); });\n    update();\n    return update;\n  }\n\n  function registerScroll(dv, otherDv) {\n    dv.edit.on(\"scroll\", function() {\n      syncScroll(dv, true) && makeConnections(dv);\n    });\n    dv.orig.on(\"scroll\", function() {\n      syncScroll(dv, false) && makeConnections(dv);\n      if (otherDv) syncScroll(otherDv, true) && makeConnections(otherDv);\n    });\n  }\n\n  function syncScroll(dv, toOrig) {\n    // Change handler will do a refresh after a timeout when diff is out of date\n    if (dv.diffOutOfDate) {\n      if (dv.lockScroll && dv.needsScrollSync == null) dv.needsScrollSync = toOrig\n      return false\n    }\n    dv.needsScrollSync = null\n    if (!dv.lockScroll) return true;\n    var editor, other, now = +new Date;\n    if (toOrig) { editor = dv.edit; other = dv.orig; }\n    else { editor = dv.orig; other = dv.edit; }\n    // Don't take action if the position of this editor was recently set\n    // (to prevent feedback loops)\n    if (editor.state.scrollSetBy == dv && (editor.state.scrollSetAt || 0) + 250 > now) return false;\n\n    var sInfo = editor.getScrollInfo();\n    if (dv.mv.options.connect == \"align\") {\n      targetPos = sInfo.top;\n    } else {\n      var halfScreen = .5 * sInfo.clientHeight, midY = sInfo.top + halfScreen;\n      var mid = editor.lineAtHeight(midY, \"local\");\n      var around = chunkBoundariesAround(dv.chunks, mid, toOrig);\n      var off = getOffsets(editor, toOrig ? around.edit : around.orig);\n      var offOther = getOffsets(other, toOrig ? around.orig : around.edit);\n      var ratio = (midY - off.top) / (off.bot - off.top);\n      var targetPos = (offOther.top - halfScreen) + ratio * (offOther.bot - offOther.top);\n\n      var botDist, mix;\n      // Some careful tweaking to make sure no space is left out of view\n      // when scrolling to top or bottom.\n      if (targetPos > sInfo.top && (mix = sInfo.top / halfScreen) < 1) {\n        targetPos = targetPos * mix + sInfo.top * (1 - mix);\n      } else if ((botDist = sInfo.height - sInfo.clientHeight - sInfo.top) < halfScreen) {\n        var otherInfo = other.getScrollInfo();\n        var botDistOther = otherInfo.height - otherInfo.clientHeight - targetPos;\n        if (botDistOther > botDist && (mix = botDist / halfScreen) < 1)\n          targetPos = targetPos * mix + (otherInfo.height - otherInfo.clientHeight - botDist) * (1 - mix);\n      }\n    }\n\n    other.scrollTo(sInfo.left, targetPos);\n    other.state.scrollSetAt = now;\n    other.state.scrollSetBy = dv;\n    return true;\n  }\n\n  function getOffsets(editor, around) {\n    var bot = around.after;\n    if (bot == null) bot = editor.lastLine() + 1;\n    return {top: editor.heightAtLine(around.before || 0, \"local\"),\n            bot: editor.heightAtLine(bot, \"local\")};\n  }\n\n  function setScrollLock(dv, val, action) {\n    dv.lockScroll = val;\n    if (val && action != false) syncScroll(dv, DIFF_INSERT) && makeConnections(dv);\n    (val ? CodeMirror.addClass : CodeMirror.rmClass)(dv.lockButton, \"CodeMirror-merge-scrolllock-enabled\");\n  }\n\n  // Updating the marks for editor content\n\n  function removeClass(editor, line, classes) {\n    var locs = classes.classLocation\n    for (var i = 0; i < locs.length; i++) {\n      editor.removeLineClass(line, locs[i], classes.chunk);\n      editor.removeLineClass(line, locs[i], classes.start);\n      editor.removeLineClass(line, locs[i], classes.end);\n    }\n  }\n\n  function clearMarks(editor, arr, classes) {\n    for (var i = 0; i < arr.length; ++i) {\n      var mark = arr[i];\n      if (mark instanceof CodeMirror.TextMarker)\n        mark.clear();\n      else if (mark.parent)\n        removeClass(editor, mark, classes);\n    }\n    arr.length = 0;\n  }\n\n  // FIXME maybe add a margin around viewport to prevent too many updates\n  function updateMarks(editor, diff, state, type, classes) {\n    var vp = editor.getViewport();\n    editor.operation(function() {\n      if (state.from == state.to || vp.from - state.to > 20 || state.from - vp.to > 20) {\n        clearMarks(editor, state.marked, classes);\n        markChanges(editor, diff, type, state.marked, vp.from, vp.to, classes);\n        state.from = vp.from; state.to = vp.to;\n      } else {\n        if (vp.from < state.from) {\n          markChanges(editor, diff, type, state.marked, vp.from, state.from, classes);\n          state.from = vp.from;\n        }\n        if (vp.to > state.to) {\n          markChanges(editor, diff, type, state.marked, state.to, vp.to, classes);\n          state.to = vp.to;\n        }\n      }\n    });\n  }\n\n  function addClass(editor, lineNr, classes, main, start, end) {\n    var locs = classes.classLocation, line = editor.getLineHandle(lineNr);\n    for (var i = 0; i < locs.length; i++) {\n      if (main) editor.addLineClass(line, locs[i], classes.chunk);\n      if (start) editor.addLineClass(line, locs[i], classes.start);\n      if (end) editor.addLineClass(line, locs[i], classes.end);\n    }\n    return line;\n  }\n\n  function markChanges(editor, diff, type, marks, from, to, classes) {\n    var pos = Pos(0, 0);\n    var top = Pos(from, 0), bot = editor.clipPos(Pos(to - 1));\n    var cls = type == DIFF_DELETE ? classes.del : classes.insert;\n    function markChunk(start, end) {\n      var bfrom = Math.max(from, start), bto = Math.min(to, end);\n      for (var i = bfrom; i < bto; ++i)\n        marks.push(addClass(editor, i, classes, true, i == start, i == end - 1));\n      // When the chunk is empty, make sure a horizontal line shows up\n      if (start == end && bfrom == end && bto == end) {\n        if (bfrom)\n          marks.push(addClass(editor, bfrom - 1, classes, false, false, true));\n        else\n          marks.push(addClass(editor, bfrom, classes, false, true, false));\n      }\n    }\n\n    var chunkStart = 0, pending = false;\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i], tp = part[0], str = part[1];\n      if (tp == DIFF_EQUAL) {\n        var cleanFrom = pos.line + (startOfLineClean(diff, i) ? 0 : 1);\n        moveOver(pos, str);\n        var cleanTo = pos.line + (endOfLineClean(diff, i) ? 1 : 0);\n        if (cleanTo > cleanFrom) {\n          if (pending) { markChunk(chunkStart, cleanFrom); pending = false }\n          chunkStart = cleanTo;\n        }\n      } else {\n        pending = true\n        if (tp == type) {\n          var end = moveOver(pos, str, true);\n          var a = posMax(top, pos), b = posMin(bot, end);\n          if (!posEq(a, b))\n            marks.push(editor.markText(a, b, {className: cls}));\n          pos = end;\n        }\n      }\n    }\n    if (pending) markChunk(chunkStart, pos.line + 1);\n  }\n\n  // Updating the gap between editor and original\n\n  function makeConnections(dv) {\n    if (!dv.showDifferences) return;\n\n    if (dv.svg) {\n      clear(dv.svg);\n      var w = dv.gap.offsetWidth;\n      attrs(dv.svg, \"width\", w, \"height\", dv.gap.offsetHeight);\n    }\n    if (dv.copyButtons) clear(dv.copyButtons);\n\n    var vpEdit = dv.edit.getViewport(), vpOrig = dv.orig.getViewport();\n    var outerTop = dv.mv.wrap.getBoundingClientRect().top\n    var sTopEdit = outerTop - dv.edit.getScrollerElement().getBoundingClientRect().top + dv.edit.getScrollInfo().top\n    var sTopOrig = outerTop - dv.orig.getScrollerElement().getBoundingClientRect().top + dv.orig.getScrollInfo().top;\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var ch = dv.chunks[i];\n      if (ch.editFrom <= vpEdit.to && ch.editTo >= vpEdit.from &&\n          ch.origFrom <= vpOrig.to && ch.origTo >= vpOrig.from)\n        drawConnectorsForChunk(dv, ch, sTopOrig, sTopEdit, w);\n    }\n  }\n\n  function getMatchingOrigLine(editLine, chunks) {\n    var editStart = 0, origStart = 0;\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      if (chunk.editTo > editLine && chunk.editFrom <= editLine) return null;\n      if (chunk.editFrom > editLine) break;\n      editStart = chunk.editTo;\n      origStart = chunk.origTo;\n    }\n    return origStart + (editLine - editStart);\n  }\n\n  // Combines information about chunks and widgets/markers to return\n  // an array of lines, in a single editor, that probably need to be\n  // aligned with their counterparts in the editor next to it.\n  function alignableFor(cm, chunks, isOrig) {\n    var tracker = cm.state.trackAlignable\n    var start = cm.firstLine(), trackI = 0\n    var result = []\n    for (var i = 0;; i++) {\n      var chunk = chunks[i]\n      var chunkStart = !chunk ? 1e9 : isOrig ? chunk.origFrom : chunk.editFrom\n      for (; trackI < tracker.alignable.length; trackI += 2) {\n        var n = tracker.alignable[trackI] + 1\n        if (n <= start) continue\n        if (n <= chunkStart) result.push(n)\n        else break\n      }\n      if (!chunk) break\n      result.push(start = isOrig ? chunk.origTo : chunk.editTo)\n    }\n    return result\n  }\n\n  // Given information about alignable lines in two editors, fill in\n  // the result (an array of three-element arrays) to reflect the\n  // lines that need to be aligned with each other.\n  function mergeAlignable(result, origAlignable, chunks, setIndex) {\n    var rI = 0, origI = 0, chunkI = 0, diff = 0\n    outer: for (;; rI++) {\n      var nextR = result[rI], nextO = origAlignable[origI]\n      if (!nextR && nextO == null) break\n\n      var rLine = nextR ? nextR[0] : 1e9, oLine = nextO == null ? 1e9 : nextO\n      while (chunkI < chunks.length) {\n        var chunk = chunks[chunkI]\n        if (chunk.origFrom <= oLine && chunk.origTo > oLine) {\n          origI++\n          rI--\n          continue outer;\n        }\n        if (chunk.editTo > rLine) {\n          if (chunk.editFrom <= rLine) continue outer;\n          break\n        }\n        diff += (chunk.origTo - chunk.origFrom) - (chunk.editTo - chunk.editFrom)\n        chunkI++\n      }\n      if (rLine == oLine - diff) {\n        nextR[setIndex] = oLine\n        origI++\n      } else if (rLine < oLine - diff) {\n        nextR[setIndex] = rLine + diff\n      } else {\n        var record = [oLine - diff, null, null]\n        record[setIndex] = oLine\n        result.splice(rI, 0, record)\n        origI++\n      }\n    }\n  }\n\n  function findAlignedLines(dv, other) {\n    var alignable = alignableFor(dv.edit, dv.chunks, false), result = []\n    if (other) for (var i = 0, j = 0; i < other.chunks.length; i++) {\n      var n = other.chunks[i].editTo\n      while (j < alignable.length && alignable[j] < n) j++\n      if (j == alignable.length || alignable[j] != n) alignable.splice(j++, 0, n)\n    }\n    for (var i = 0; i < alignable.length; i++)\n      result.push([alignable[i], null, null])\n\n    mergeAlignable(result, alignableFor(dv.orig, dv.chunks, true), dv.chunks, 1)\n    if (other)\n      mergeAlignable(result, alignableFor(other.orig, other.chunks, true), other.chunks, 2)\n\n    return result\n  }\n\n  function alignChunks(dv, force) {\n    if (!dv.dealigned && !force) return;\n    if (!dv.orig.curOp) return dv.orig.operation(function() {\n      alignChunks(dv, force);\n    });\n\n    dv.dealigned = false;\n    var other = dv.mv.left == dv ? dv.mv.right : dv.mv.left;\n    if (other) {\n      ensureDiff(other);\n      other.dealigned = false;\n    }\n    var linesToAlign = findAlignedLines(dv, other);\n\n    // Clear old aligners\n    var aligners = dv.mv.aligners;\n    for (var i = 0; i < aligners.length; i++)\n      aligners[i].clear();\n    aligners.length = 0;\n\n    var cm = [dv.edit, dv.orig], scroll = [], offset = []\n    if (other) cm.push(other.orig);\n    for (var i = 0; i < cm.length; i++) {\n      scroll.push(cm[i].getScrollInfo().top);\n      offset.push(-cm[i].getScrollerElement().getBoundingClientRect().top)\n    }\n\n    if (offset[0] != offset[1] || cm.length == 3 && offset[1] != offset[2])\n      alignLines(cm, offset, [0, 0, 0], aligners)\n    for (var ln = 0; ln < linesToAlign.length; ln++)\n      alignLines(cm, offset, linesToAlign[ln], aligners);\n\n    for (var i = 0; i < cm.length; i++)\n      cm[i].scrollTo(null, scroll[i]);\n  }\n\n  function alignLines(cm, cmOffset, lines, aligners) {\n    var maxOffset = -1e8, offset = [];\n    for (var i = 0; i < cm.length; i++) if (lines[i] != null) {\n      var off = cm[i].heightAtLine(lines[i], \"local\") - cmOffset[i];\n      offset[i] = off;\n      maxOffset = Math.max(maxOffset, off);\n    }\n    for (var i = 0; i < cm.length; i++) if (lines[i] != null) {\n      var diff = maxOffset - offset[i];\n      if (diff > 1)\n        aligners.push(padAbove(cm[i], lines[i], diff));\n    }\n  }\n\n  function padAbove(cm, line, size) {\n    var above = true;\n    if (line > cm.lastLine()) {\n      line--;\n      above = false;\n    }\n    var elt = document.createElement(\"div\");\n    elt.className = \"CodeMirror-merge-spacer\";\n    elt.style.height = size + \"px\"; elt.style.minWidth = \"1px\";\n    return cm.addLineWidget(line, elt, {height: size, above: above, mergeSpacer: true, handleMouseEvents: true});\n  }\n\n  function drawConnectorsForChunk(dv, chunk, sTopOrig, sTopEdit, w) {\n    var flip = dv.type == \"left\";\n    var top = dv.orig.heightAtLine(chunk.origFrom, \"local\", true) - sTopOrig;\n    if (dv.svg) {\n      var topLpx = top;\n      var topRpx = dv.edit.heightAtLine(chunk.editFrom, \"local\", true) - sTopEdit;\n      if (flip) { var tmp = topLpx; topLpx = topRpx; topRpx = tmp; }\n      var botLpx = dv.orig.heightAtLine(chunk.origTo, \"local\", true) - sTopOrig;\n      var botRpx = dv.edit.heightAtLine(chunk.editTo, \"local\", true) - sTopEdit;\n      if (flip) { var tmp = botLpx; botLpx = botRpx; botRpx = tmp; }\n      var curveTop = \" C \" + w/2 + \" \" + topRpx + \" \" + w/2 + \" \" + topLpx + \" \" + (w + 2) + \" \" + topLpx;\n      var curveBot = \" C \" + w/2 + \" \" + botLpx + \" \" + w/2 + \" \" + botRpx + \" -1 \" + botRpx;\n      attrs(dv.svg.appendChild(document.createElementNS(svgNS, \"path\")),\n            \"d\", \"M -1 \" + topRpx + curveTop + \" L \" + (w + 2) + \" \" + botLpx + curveBot + \" z\",\n            \"class\", dv.classes.connect);\n    }\n    if (dv.copyButtons) {\n      var copy = dv.copyButtons.appendChild(elt(\"div\", dv.type == \"left\" ? \"\\u21dd\" : \"\\u21dc\",\n                                                \"CodeMirror-merge-copy\"));\n      var editOriginals = dv.mv.options.allowEditingOriginals;\n      copy.title = dv.edit.phrase(editOriginals ? \"Push to left\" : \"Revert chunk\");\n      copy.chunk = chunk;\n      copy.style.top = (chunk.origTo > chunk.origFrom ? top : dv.edit.heightAtLine(chunk.editFrom, \"local\") - sTopEdit) + \"px\";\n      copy.setAttribute(\"role\", \"button\");\n      copy.setAttribute(\"tabindex\", \"0\");\n      copy.setAttribute(\"aria-label\", copy.title);\n\n      if (editOriginals) {\n        var topReverse = dv.edit.heightAtLine(chunk.editFrom, \"local\") - sTopEdit;\n        var copyReverse = dv.copyButtons.appendChild(elt(\"div\", dv.type == \"right\" ? \"\\u21dd\" : \"\\u21dc\",\n                                                         \"CodeMirror-merge-copy-reverse\"));\n        copyReverse.title = \"Push to right\";\n        copyReverse.chunk = {editFrom: chunk.origFrom, editTo: chunk.origTo,\n                             origFrom: chunk.editFrom, origTo: chunk.editTo};\n        copyReverse.style.top = topReverse + \"px\";\n        dv.type == \"right\" ? copyReverse.style.left = \"2px\" : copyReverse.style.right = \"2px\";\n        copyReverse.setAttribute(\"role\", \"button\");\n        copyReverse.setAttribute(\"tabindex\", \"0\");\n        copyReverse.setAttribute(\"aria-label\", copyReverse.title);\n      }\n    }\n  }\n\n  function copyChunk(dv, to, from, chunk) {\n    if (dv.diffOutOfDate) return;\n    var origStart = chunk.origTo > from.lastLine() ? Pos(chunk.origFrom - 1) : Pos(chunk.origFrom, 0)\n    var origEnd = Pos(chunk.origTo, 0)\n    var editStart = chunk.editTo > to.lastLine() ? Pos(chunk.editFrom - 1) : Pos(chunk.editFrom, 0)\n    var editEnd = Pos(chunk.editTo, 0)\n    var handler = dv.mv.options.revertChunk\n    if (handler)\n      handler(dv.mv, from, origStart, origEnd, to, editStart, editEnd)\n    else\n      to.replaceRange(from.getRange(origStart, origEnd), editStart, editEnd)\n  }\n\n  // Merge view, containing 0, 1, or 2 diff views.\n\n  var MergeView = CodeMirror.MergeView = function(node, options) {\n    if (!(this instanceof MergeView)) return new MergeView(node, options);\n\n    this.options = options;\n    var origLeft = options.origLeft, origRight = options.origRight == null ? options.orig : options.origRight;\n\n    var hasLeft = origLeft != null, hasRight = origRight != null;\n    var panes = 1 + (hasLeft ? 1 : 0) + (hasRight ? 1 : 0);\n    var wrap = [], left = this.left = null, right = this.right = null;\n    var self = this;\n\n    if (hasLeft) {\n      left = this.left = new DiffView(this, \"left\");\n      var leftPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-left\");\n      wrap.push(leftPane);\n      wrap.push(buildGap(left));\n    }\n\n    var editPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-editor\");\n    wrap.push(editPane);\n\n    if (hasRight) {\n      right = this.right = new DiffView(this, \"right\");\n      wrap.push(buildGap(right));\n      var rightPane = elt(\"div\", null, \"CodeMirror-merge-pane CodeMirror-merge-right\");\n      wrap.push(rightPane);\n    }\n\n    (hasRight ? rightPane : editPane).className += \" CodeMirror-merge-pane-rightmost\";\n\n    wrap.push(elt(\"div\", null, null, \"height: 0; clear: both;\"));\n\n    var wrapElt = this.wrap = node.appendChild(elt(\"div\", wrap, \"CodeMirror-merge CodeMirror-merge-\" + panes + \"pane\"));\n    this.edit = CodeMirror(editPane, copyObj(options));\n\n    if (left) left.init(leftPane, origLeft, options);\n    if (right) right.init(rightPane, origRight, options);\n    if (options.collapseIdentical)\n      this.editor().operation(function() {\n        collapseIdenticalStretches(self, options.collapseIdentical);\n      });\n    if (options.connect == \"align\") {\n      this.aligners = [];\n      alignChunks(this.left || this.right, true);\n    }\n    if (left) left.registerEvents(right)\n    if (right) right.registerEvents(left)\n\n\n    var onResize = function() {\n      if (left) makeConnections(left);\n      if (right) makeConnections(right);\n    };\n    CodeMirror.on(window, \"resize\", onResize);\n    var resizeInterval = setInterval(function() {\n      for (var p = wrapElt.parentNode; p && p != document.body; p = p.parentNode) {}\n      if (!p) { clearInterval(resizeInterval); CodeMirror.off(window, \"resize\", onResize); }\n    }, 5000);\n  };\n\n  function buildGap(dv) {\n    var lock = dv.lockButton = elt(\"div\", null, \"CodeMirror-merge-scrolllock\");\n    lock.setAttribute(\"role\", \"button\");\n    lock.setAttribute(\"tabindex\", \"0\");\n    var lockWrap = elt(\"div\", [lock], \"CodeMirror-merge-scrolllock-wrap\");\n    CodeMirror.on(lock, \"click\", function() { setScrollLock(dv, !dv.lockScroll); });\n    CodeMirror.on(lock, \"keyup\", function(e) { (e.key === \"Enter\" || e.code === \"Space\") && setScrollLock(dv, !dv.lockScroll); });\n    var gapElts = [lockWrap];\n    if (dv.mv.options.revertButtons !== false) {\n      dv.copyButtons = elt(\"div\", null, \"CodeMirror-merge-copybuttons-\" + dv.type);\n      var copyButtons = function(e) {\n        var node = e.target || e.srcElement;\n        if (!node.chunk) return;\n        if (node.className == \"CodeMirror-merge-copy-reverse\") {\n          copyChunk(dv, dv.orig, dv.edit, node.chunk);\n          return;\n        }\n        copyChunk(dv, dv.edit, dv.orig, node.chunk);\n      }\n      CodeMirror.on(dv.copyButtons, \"click\", copyButtons);\n      CodeMirror.on(dv.copyButtons, \"keyup\", function(e) { (e.key === \"Enter\" || e.code === \"Space\") && copyButtons(e); });\n      gapElts.unshift(dv.copyButtons);\n    }\n    if (dv.mv.options.connect != \"align\") {\n      var svg = document.createElementNS && document.createElementNS(svgNS, \"svg\");\n      if (svg && !svg.createSVGRect) svg = null;\n      dv.svg = svg;\n      if (svg) gapElts.push(svg);\n    }\n\n    return dv.gap = elt(\"div\", gapElts, \"CodeMirror-merge-gap\");\n  }\n\n  MergeView.prototype = {\n    constructor: MergeView,\n    editor: function() { return this.edit; },\n    rightOriginal: function() { return this.right && this.right.orig; },\n    leftOriginal: function() { return this.left && this.left.orig; },\n    setShowDifferences: function(val) {\n      if (this.right) this.right.setShowDifferences(val);\n      if (this.left) this.left.setShowDifferences(val);\n    },\n    rightChunks: function() {\n      if (this.right) { ensureDiff(this.right); return this.right.chunks; }\n    },\n    leftChunks: function() {\n      if (this.left) { ensureDiff(this.left); return this.left.chunks; }\n    }\n  };\n\n  function asString(obj) {\n    if (typeof obj == \"string\") return obj;\n    else return obj.getValue();\n  }\n\n  // Operations on diffs\n  var dmp;\n  function getDiff(a, b, ignoreWhitespace) {\n    if (!dmp) dmp = new diff_match_patch();\n\n    var diff = dmp.diff_main(a, b);\n    // The library sometimes leaves in empty parts, which confuse the algorithm\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i];\n      if (ignoreWhitespace ? !/[^ \\t]/.test(part[1]) : !part[1]) {\n        diff.splice(i--, 1);\n      } else if (i && diff[i - 1][0] == part[0]) {\n        diff.splice(i--, 1);\n        diff[i][1] += part[1];\n      }\n    }\n    return diff;\n  }\n\n  function getChunks(diff) {\n    var chunks = [];\n    if (!diff.length) return chunks;\n    var startEdit = 0, startOrig = 0;\n    var edit = Pos(0, 0), orig = Pos(0, 0);\n    for (var i = 0; i < diff.length; ++i) {\n      var part = diff[i], tp = part[0];\n      if (tp == DIFF_EQUAL) {\n        var startOff = !startOfLineClean(diff, i) || edit.line < startEdit || orig.line < startOrig ? 1 : 0;\n        var cleanFromEdit = edit.line + startOff, cleanFromOrig = orig.line + startOff;\n        moveOver(edit, part[1], null, orig);\n        var endOff = endOfLineClean(diff, i) ? 1 : 0;\n        var cleanToEdit = edit.line + endOff, cleanToOrig = orig.line + endOff;\n        if (cleanToEdit > cleanFromEdit) {\n          if (i) chunks.push({origFrom: startOrig, origTo: cleanFromOrig,\n                              editFrom: startEdit, editTo: cleanFromEdit});\n          startEdit = cleanToEdit; startOrig = cleanToOrig;\n        }\n      } else {\n        moveOver(tp == DIFF_INSERT ? edit : orig, part[1]);\n      }\n    }\n    if (startEdit <= edit.line || startOrig <= orig.line)\n      chunks.push({origFrom: startOrig, origTo: orig.line + 1,\n                   editFrom: startEdit, editTo: edit.line + 1});\n    return chunks;\n  }\n\n  function endOfLineClean(diff, i) {\n    if (i == diff.length - 1) return true;\n    var next = diff[i + 1][1];\n    if ((next.length == 1 && i < diff.length - 2) || next.charCodeAt(0) != 10) return false;\n    if (i == diff.length - 2) return true;\n    next = diff[i + 2][1];\n    return (next.length > 1 || i == diff.length - 3) && next.charCodeAt(0) == 10;\n  }\n\n  function startOfLineClean(diff, i) {\n    if (i == 0) return true;\n    var last = diff[i - 1][1];\n    if (last.charCodeAt(last.length - 1) != 10) return false;\n    if (i == 1) return true;\n    last = diff[i - 2][1];\n    return last.charCodeAt(last.length - 1) == 10;\n  }\n\n  function chunkBoundariesAround(chunks, n, nInEdit) {\n    var beforeE, afterE, beforeO, afterO;\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      var fromLocal = nInEdit ? chunk.editFrom : chunk.origFrom;\n      var toLocal = nInEdit ? chunk.editTo : chunk.origTo;\n      if (afterE == null) {\n        if (fromLocal > n) { afterE = chunk.editFrom; afterO = chunk.origFrom; }\n        else if (toLocal > n) { afterE = chunk.editTo; afterO = chunk.origTo; }\n      }\n      if (toLocal <= n) { beforeE = chunk.editTo; beforeO = chunk.origTo; }\n      else if (fromLocal <= n) { beforeE = chunk.editFrom; beforeO = chunk.origFrom; }\n    }\n    return {edit: {before: beforeE, after: afterE}, orig: {before: beforeO, after: afterO}};\n  }\n\n  function collapseSingle(cm, from, to) {\n    cm.addLineClass(from, \"wrap\", \"CodeMirror-merge-collapsed-line\");\n    var widget = document.createElement(\"span\");\n    widget.className = \"CodeMirror-merge-collapsed-widget\";\n    widget.title = cm.phrase(\"Identical text collapsed. Click to expand.\");\n    var mark = cm.markText(Pos(from, 0), Pos(to - 1), {\n      inclusiveLeft: true,\n      inclusiveRight: true,\n      replacedWith: widget,\n      clearOnEnter: true\n    });\n    function clear() {\n      mark.clear();\n      cm.removeLineClass(from, \"wrap\", \"CodeMirror-merge-collapsed-line\");\n    }\n    if (mark.explicitlyCleared) clear();\n    CodeMirror.on(widget, \"click\", clear);\n    mark.on(\"clear\", clear);\n    CodeMirror.on(widget, \"click\", clear);\n    return {mark: mark, clear: clear};\n  }\n\n  function collapseStretch(size, editors) {\n    var marks = [];\n    function clear() {\n      for (var i = 0; i < marks.length; i++) marks[i].clear();\n    }\n    for (var i = 0; i < editors.length; i++) {\n      var editor = editors[i];\n      var mark = collapseSingle(editor.cm, editor.line, editor.line + size);\n      marks.push(mark);\n      mark.mark.on(\"clear\", clear);\n    }\n    return marks[0].mark;\n  }\n\n  function unclearNearChunks(dv, margin, off, clear) {\n    for (var i = 0; i < dv.chunks.length; i++) {\n      var chunk = dv.chunks[i];\n      for (var l = chunk.editFrom - margin; l < chunk.editTo + margin; l++) {\n        var pos = l + off;\n        if (pos >= 0 && pos < clear.length) clear[pos] = false;\n      }\n    }\n  }\n\n  function collapseIdenticalStretches(mv, margin) {\n    if (typeof margin != \"number\") margin = 2;\n    var clear = [], edit = mv.editor(), off = edit.firstLine();\n    for (var l = off, e = edit.lastLine(); l <= e; l++) clear.push(true);\n    if (mv.left) unclearNearChunks(mv.left, margin, off, clear);\n    if (mv.right) unclearNearChunks(mv.right, margin, off, clear);\n\n    for (var i = 0; i < clear.length; i++) {\n      if (clear[i]) {\n        var line = i + off;\n        for (var size = 1; i < clear.length - 1 && clear[i + 1]; i++, size++) {}\n        if (size > margin) {\n          var editors = [{line: line, cm: edit}];\n          if (mv.left) editors.push({line: getMatchingOrigLine(line, mv.left.chunks), cm: mv.left.orig});\n          if (mv.right) editors.push({line: getMatchingOrigLine(line, mv.right.chunks), cm: mv.right.orig});\n          var mark = collapseStretch(size, editors);\n          if (mv.options.onCollapse) mv.options.onCollapse(mv, line, size, mark);\n        }\n      }\n    }\n  }\n\n  // General utilities\n\n  function elt(tag, content, className, style) {\n    var e = document.createElement(tag);\n    if (className) e.className = className;\n    if (style) e.style.cssText = style;\n    if (typeof content == \"string\") e.appendChild(document.createTextNode(content));\n    else if (content) for (var i = 0; i < content.length; ++i) e.appendChild(content[i]);\n    return e;\n  }\n\n  function clear(node) {\n    for (var count = node.childNodes.length; count > 0; --count)\n      node.removeChild(node.firstChild);\n  }\n\n  function attrs(elt) {\n    for (var i = 1; i < arguments.length; i += 2)\n      elt.setAttribute(arguments[i], arguments[i+1]);\n  }\n\n  function copyObj(obj, target) {\n    if (!target) target = {};\n    for (var prop in obj) if (obj.hasOwnProperty(prop)) target[prop] = obj[prop];\n    return target;\n  }\n\n  function moveOver(pos, str, copy, other) {\n    var out = copy ? Pos(pos.line, pos.ch) : pos, at = 0;\n    for (;;) {\n      var nl = str.indexOf(\"\\n\", at);\n      if (nl == -1) break;\n      ++out.line;\n      if (other) ++other.line;\n      at = nl + 1;\n    }\n    out.ch = (at ? 0 : out.ch) + (str.length - at);\n    if (other) other.ch = (at ? 0 : other.ch) + (str.length - at);\n    return out;\n  }\n\n  // Tracks collapsed markers and line widgets, in order to be able to\n  // accurately align the content of two editors.\n\n  var F_WIDGET = 1, F_WIDGET_BELOW = 2, F_MARKER = 4\n\n  function TrackAlignable(cm) {\n    this.cm = cm\n    this.alignable = []\n    this.height = cm.doc.height\n    var self = this\n    cm.on(\"markerAdded\", function(_, marker) {\n      if (!marker.collapsed) return\n      var found = marker.find(1)\n      if (found != null) self.set(found.line, F_MARKER)\n    })\n    cm.on(\"markerCleared\", function(_, marker, _min, max) {\n      if (max != null && marker.collapsed)\n        self.check(max, F_MARKER, self.hasMarker)\n    })\n    cm.on(\"markerChanged\", this.signal.bind(this))\n    cm.on(\"lineWidgetAdded\", function(_, widget, lineNo) {\n      if (widget.mergeSpacer) return\n      if (widget.above) self.set(lineNo - 1, F_WIDGET_BELOW)\n      else self.set(lineNo, F_WIDGET)\n    })\n    cm.on(\"lineWidgetCleared\", function(_, widget, lineNo) {\n      if (widget.mergeSpacer) return\n      if (widget.above) self.check(lineNo - 1, F_WIDGET_BELOW, self.hasWidgetBelow)\n      else self.check(lineNo, F_WIDGET, self.hasWidget)\n    })\n    cm.on(\"lineWidgetChanged\", this.signal.bind(this))\n    cm.on(\"change\", function(_, change) {\n      var start = change.from.line, nBefore = change.to.line - change.from.line\n      var nAfter = change.text.length - 1, end = start + nAfter\n      if (nBefore || nAfter) self.map(start, nBefore, nAfter)\n      self.check(end, F_MARKER, self.hasMarker)\n      if (nBefore || nAfter) self.check(change.from.line, F_MARKER, self.hasMarker)\n    })\n    cm.on(\"viewportChange\", function() {\n      if (self.cm.doc.height != self.height) self.signal()\n    })\n  }\n\n  TrackAlignable.prototype = {\n    signal: function() {\n      CodeMirror.signal(this, \"realign\")\n      this.height = this.cm.doc.height\n    },\n\n    set: function(n, flags) {\n      var pos = -1\n      for (; pos < this.alignable.length; pos += 2) {\n        var diff = this.alignable[pos] - n\n        if (diff == 0) {\n          if ((this.alignable[pos + 1] & flags) == flags) return\n          this.alignable[pos + 1] |= flags\n          this.signal()\n          return\n        }\n        if (diff > 0) break\n      }\n      this.signal()\n      this.alignable.splice(pos, 0, n, flags)\n    },\n\n    find: function(n) {\n      for (var i = 0; i < this.alignable.length; i += 2)\n        if (this.alignable[i] == n) return i\n      return -1\n    },\n\n    check: function(n, flag, pred) {\n      var found = this.find(n)\n      if (found == -1 || !(this.alignable[found + 1] & flag)) return\n      if (!pred.call(this, n)) {\n        this.signal()\n        var flags = this.alignable[found + 1] & ~flag\n        if (flags) this.alignable[found + 1] = flags\n        else this.alignable.splice(found, 2)\n      }\n    },\n\n    hasMarker: function(n) {\n      var handle = this.cm.getLineHandle(n)\n      if (handle.markedSpans) for (var i = 0; i < handle.markedSpans.length; i++)\n        if (handle.markedSpans[i].marker.collapsed && handle.markedSpans[i].to != null)\n          return true\n      return false\n    },\n\n    hasWidget: function(n) {\n      var handle = this.cm.getLineHandle(n)\n      if (handle.widgets) for (var i = 0; i < handle.widgets.length; i++)\n        if (!handle.widgets[i].above && !handle.widgets[i].mergeSpacer) return true\n      return false\n    },\n\n    hasWidgetBelow: function(n) {\n      if (n == this.cm.lastLine()) return false\n      var handle = this.cm.getLineHandle(n + 1)\n      if (handle.widgets) for (var i = 0; i < handle.widgets.length; i++)\n        if (handle.widgets[i].above && !handle.widgets[i].mergeSpacer) return true\n      return false\n    },\n\n    map: function(from, nBefore, nAfter) {\n      var diff = nAfter - nBefore, to = from + nBefore, widgetFrom = -1, widgetTo = -1\n      for (var i = 0; i < this.alignable.length; i += 2) {\n        var n = this.alignable[i]\n        if (n == from && (this.alignable[i + 1] & F_WIDGET_BELOW)) widgetFrom = i\n        if (n == to && (this.alignable[i + 1] & F_WIDGET_BELOW)) widgetTo = i\n        if (n <= from) continue\n        else if (n < to) this.alignable.splice(i--, 2)\n        else this.alignable[i] += diff\n      }\n      if (widgetFrom > -1) {\n        var flags = this.alignable[widgetFrom + 1]\n        if (flags == F_WIDGET_BELOW) this.alignable.splice(widgetFrom, 2)\n        else this.alignable[widgetFrom + 1] = flags & ~F_WIDGET_BELOW\n      }\n      if (widgetTo > -1 && nAfter)\n        this.set(from + nAfter, F_WIDGET_BELOW)\n    }\n  }\n\n  function posMin(a, b) { return (a.line - b.line || a.ch - b.ch) < 0 ? a : b; }\n  function posMax(a, b) { return (a.line - b.line || a.ch - b.ch) > 0 ? a : b; }\n  function posEq(a, b) { return a.line == b.line && a.ch == b.ch; }\n\n  function findPrevDiff(chunks, start, isOrig) {\n    for (var i = chunks.length - 1; i >= 0; i--) {\n      var chunk = chunks[i];\n      var to = (isOrig ? chunk.origTo : chunk.editTo) - 1;\n      if (to < start) return to;\n    }\n  }\n\n  function findNextDiff(chunks, start, isOrig) {\n    for (var i = 0; i < chunks.length; i++) {\n      var chunk = chunks[i];\n      var from = (isOrig ? chunk.origFrom : chunk.editFrom);\n      if (from > start) return from;\n    }\n  }\n\n  function goNearbyDiff(cm, dir) {\n    var found = null, views = cm.state.diffViews, line = cm.getCursor().line;\n    if (views) for (var i = 0; i < views.length; i++) {\n      var dv = views[i], isOrig = cm == dv.orig;\n      ensureDiff(dv);\n      var pos = dir < 0 ? findPrevDiff(dv.chunks, line, isOrig) : findNextDiff(dv.chunks, line, isOrig);\n      if (pos != null && (found == null || (dir < 0 ? pos > found : pos < found)))\n        found = pos;\n    }\n    if (found != null)\n      cm.setCursor(found, 0);\n    else\n      return CodeMirror.Pass;\n  }\n\n  CodeMirror.commands.goNextDiff = function(cm) {\n    return goNearbyDiff(cm, 1);\n  };\n  CodeMirror.commands.goPrevDiff = function(cm) {\n    return goNearbyDiff(cm, -1);\n  };\n});\n"],
  "mappings": "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",
  "names": ["CodeMirror", "change", "end", "i", "elt", "clear"]
}
