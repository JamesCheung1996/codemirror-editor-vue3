import{o as t,c as a,e as n}from"./app.8f5014a0.js";const e='{"title":"组件 Events","description":"","frontmatter":{},"headers":[{"level":3,"title":"组件 Events","slug":"组件-events"},{"level":3,"title":"Codemirror Events","slug":"codemirror-events"}],"relativePath":"config/events.md","lastUpdated":1629038416627}',s={},o=[n('<h3 id="组件-events"><a class="header-anchor" href="#组件-events" aria-hidden="true">#</a> 组件 Events</h3><table><thead><tr><th>事件名称</th><th style="text-align:center;">说明</th><th style="text-align:left;">回调参数</th></tr></thead><tbody><tr><td><code>change</code></td><td style="text-align:center;">codemirror实例发生改变，返回 value 和该实例（如：绑定值变化或 options 变化）</td><td style="text-align:left;"><code>(value: string instance: object) =&gt; void</code></td></tr><tr><td><code>ready</code></td><td style="text-align:center;">codemirror实例创建完成，返回该实例</td><td style="text-align:left;"><code>(instance: object) =&gt; void</code></td></tr></tbody></table><h3 id="codemirror-events"><a class="header-anchor" href="#codemirror-events" aria-hidden="true">#</a> Codemirror Events</h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>以下事件为官方Codemirror自身事件，具体内容可以查阅官方文档 <a href="https://codemirror.net/doc/manual.html#events" target="_blank" rel="noopener noreferrer">Codemirror Event</a>，使用本插件时可以直接通过组件绑定以下事件：</p></div><div class="language-vue"><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlighted"> </div><div class="highlighted"> </div><div class="highlighted"> </div><br><br></div><pre><code>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Codemirror</span>\n    <span class="token attr-name"><span class="token namespace">v-model:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>code<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ mode: <span class="token punctuation">&#39;</span>text/x-vue<span class="token punctuation">&#39;</span>, theme: <span class="token punctuation">&#39;</span>default<span class="token punctuation">&#39;</span> }<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">border</span>\n    <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>测试 placeholder<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onChange<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@blur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onBlur<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@focus</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onFocus<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@scroll</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onScroll<span class="token punctuation">&quot;</span></span>\n  <span class="token punctuation">/&gt;</span></span>\n</code></pre></div><ul><li><code>changes</code></li><li><code>scroll</code></li><li><code>beforeChange</code></li><li><code>cursorActivity</code></li><li><code>keyHandled</code></li><li><code>inputRead</code></li><li><code>electricInput</code></li><li><code>beforeSelectionChange</code></li><li><code>viewportChange</code></li><li><code>swapDoc</code></li><li><code>gutterClick</code></li><li><code>gutterContextMenu</code></li><li><code>focus</code></li><li><code>blur</code></li><li><code>refresh</code></li><li><code>optionChange</code></li><li><code>scrollCursorIntoView</code></li><li><code>update</code></li></ul><h4 id="说明"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h4><p>本插件实现动态获取用户绑定的事件，只想外部抛出已绑定的时间，减少不必要的事件监听，和避免 vue3 中，emit 未绑定的事件控制台出现警告的问题</p>',8)];s.render=function(n,e,s,c,l,p){return t(),a("div",null,o)};export{e as __pageData,s as default};
