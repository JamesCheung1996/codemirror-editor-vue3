import{_ as n}from"./preload-helper.8b70a8dd.js";import{o as a,c as s,a as t,b as p,r as o,d as e,e as c}from"./app.8f5014a0.js";const u={data:()=>({dynamicComponent:null}),mounted(){n((()=>import("./merge.e1c33dda.js")),["assets/merge.e1c33dda.js","assets/javascript.cf39757d.js","assets/app.8f5014a0.js"]).then((n=>{this.dynamicComponent=n.default}))}},l='{"title":"merge 模式","description":"","frontmatter":{},"headers":[{"level":3,"title":"merge 模式","slug":"merge-模式"}],"relativePath":"merge/index.md","lastUpdated":1630234461244}',i=c('<h3 id="merge-模式"><a class="header-anchor" href="#merge-模式" aria-hidden="true">#</a> merge 模式</h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>组件内部已经引入 merge 模式相关依赖，只需要引入需要使用的语言模式和样式文件即可</p></div><h4 id="说明"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h4><p>merge 模式需要配合<a href="https://github.com/JackuB/diff-match-patch" target="_blank" rel="noopener noreferrer">diff-match-patch</a>插件使用（压缩后只占用6.3k），安装<code>codemirror-editor-vue3</code>时会自动引入该依赖</p>',4),r=c('<div class="language-vue merge-mode-demo"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Codemirror</span>\n    <span class="token attr-name">:merge</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:options</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cmOptions<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">:height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onChange<span class="token punctuation">&quot;</span></span>\n    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cm-component<span class="token punctuation">&quot;</span></span>\n  <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> Codemirror <span class="token keyword">from</span> <span class="token string">&quot;codemirror-editor-vue3&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&quot;codemirror-editor-vue3/dist/style.css&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token string">&quot;codemirror/mode/htmlmixed/htmlmixed.js&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  components<span class="token operator">:</span> <span class="token punctuation">{</span>\n    Codemirror<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> code <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;head&gt;\n  &lt;title&gt;codemirror-editor-vue&lt;/title&gt;\n  &lt;meta data-n-head=&quot;ssr&quot; charset=&quot;utf-8&quot;&gt;\n&lt;/head&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> orig2 <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;head&gt;\n  &lt;title&gt;test title&lt;/title&gt;\n  &lt;meta data-n-head=&quot;ssr&quot; charset=&quot;utf-8&quot;&gt;\n&lt;/head&gt;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      <span class="token function">change</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token operator">:</span> string<span class="token punctuation">,</span> instance<span class="token operator">:</span> object</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>instance<span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      cmOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n        value<span class="token operator">:</span> code<span class="token punctuation">.</span>value<span class="token punctuation">,</span>\n        origLeft<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>\n        orig<span class="token operator">:</span> orig2<span class="token punctuation">,</span>\n        connect<span class="token operator">:</span> <span class="token string">&quot;align&quot;</span><span class="token punctuation">,</span>\n        mode<span class="token operator">:</span> <span class="token string">&quot;text/html&quot;</span><span class="token punctuation">,</span>\n        lineNumbers<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        collapseIdentical<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n        highlightDifferences<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',1);u.render=function(n,c,u,l,k,d){return a(),s("div",null,[i,t("p",null,[k.dynamicComponent?(a(),p(o(k.dynamicComponent),{key:0})):e("v-if",!0)]),r])};export{l as __pageData,u as default};
