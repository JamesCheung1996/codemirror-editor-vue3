/* */
import "codemirror/addon/mode/simple.js";
import * as codemirror from "codemirror";

const keyWords = [
  "Container",
  "WARN",
  "LogEventConvert",
  "RemoteActorRefProvider",
  "RemotingTerminator",
  "GlobalConfiguration",
  "MEDICAL_RECORD",
  "INFO",
  "BinlogInputFormat",
  "Task",
  "Source",
  "Sink",
  "CANCELING",
  "CANCELED",
  "Freeing",
  "Ensuring",
  "FileSystem",
  "TaskExecutor",
  "Un",
  "JobManager",
  "TaskSlotTableImpl",
  "Free",
  "TaskSlot",
  "ACTIVE",
  "ResourceProfile",
  "Cores",
  "OffHeapMemory",
  "Memory",
  "Id",
  "JobLeaderService",
  "Remove",
  "ZooKeeperLeaderRetrievalService",
  "Stopping",
  "Close",
  "Cannot",
  "YarnTaskExecutorRunner",
  "RECEIVED",
  "SIGNAL",
  "SIGTERM",
  "Shutting",
  "PermanentBlobCache",
  "BLOB",
  "TransientBlobCache",
  "TaskExecutorLocalStateStoresManager",
  "FileChannelManagerImpl",
  "FileChannelManager",
  "ResourceManager",
  "End",
  "LogType",
  "LogLength",
  "Log",
  "Contents",
  "SLF4J",
  "Class",
  "Found",
  "StaticLoggerBinder",
  "CDH",
  "See",
  "Actual",
  "Log4jLoggerFactory",
  "ClusterEntrypoint",
  "Starting",
  "YarnJobClusterEntrypoint",
  "Version",
  "Rev",
  "Date",
  "CST",
  "OS",
  "Current",
  "Hadoop",
  "Kerberos",
  "JVM",
  "Java",
  "HotSpot",
  "TM",
  "Bit",
  "Server",
  "VM",
  "Oracle",
  "Corporation",
  "Maximum",
  "MiBytes",
  "JAVA_HOME",
  "Options",
  "Xms424m",
  "Xmx424m",
  "Dlog",
  "Dlog4j",
  "Program",
  "Arguments",
  "Classpath",
  "Final",
  "Registered",
  "UNIX",
  "TERM",
  "HUP",
  "INT",
  "YARN",
  "Yarn",
  "GlobalConfiguration",
  "Loading",
  "Host",
  "Name",
  "PrometheusPushGatewayReporter",
  "Dir",
  "Insight",
  "OfTaskManager",
  "XX",
  "MaxMetaspaceSize",
];

const startRegex = [
  {
    regex: /(\[.*?\])([ \t]*)(<error>)/,
    token: ["tag", null, "error.strong"],
    sol: true,
    next: "error",
  },
  {
    regex: /(\[.*?\])([ \t]*)(<info>)/,
    token: ["tag", null, "bracket"],
    sol: true,
    next: "info",
  },
  {
    regex: /(\[.*?\])([ \t]*)(<warning>)/,
    token: ["tag", null, "comment"],
    sol: true,
    next: "warning",
  },
];

codemirror.defineSimpleMode("fclog", {
  start: [
    ...startRegex,
    {
      regex: /.*/,
      token: "hr",
    },
  ],
  error: [
    ...startRegex,
    {
      regex: /.*/,
      token: "error.strong",
    },
  ],
  info: [
    ...startRegex,
    {
      regex: /.*/,
      token: "bracket",
    },
  ],
  warning: [
    ...startRegex,
    {
      regex: /.*/,
      token: "comment",
    },
  ],
});
